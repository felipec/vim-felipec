#!/usr/bin/env ruby

require_relative '../../lib/colors'
require_relative '../../lib/util'

def hi_color(color)
  rgb = get_color_rgb(color)
  hex = rgb_to_hex(*rgb)
  code = rgb_to_x256(*rgb)
  [hex.dump, code]
end

def hi(conf)
  fg, bg, style = conf.split(' ')
  params = [hi_color(fg), hi_color(bg)].transpose.flatten
  params << style.dump if style
  '[ %s ]' % params.join(', ')
end

def component(*conf)
  '[ %s ]' % conf.map { |e| hi(e) }.join(', ')
end

$output = []
$data[:modes].each do |name, mode|
  $output << '  %s: {' % name.to_s.dump
  mode.map do |name, value|
    $output << '    %s: %s,' % [name.to_s.dump, component(*value)]
  end
  $output << '  },'
end

puts <<EOL
if exists('g:lightline')

  let g:lightline#colorscheme#felipec#palette = {
#{$output.map { |e| '  \\ ' + e }.join("\n")}
  \\ }

endif
EOL
